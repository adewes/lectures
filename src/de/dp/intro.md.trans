0025cea56fe08a2d:
  de: '      testStatistic.push(values[i]/valuesD[i])'
  en: '      testStatistic.push(valuesi/valuesDi)'
0107b6f2588a15d2:
  de: '  import { DataTable } from ''{{"js/sites/intro.js"|file}}'';'
  en: '  import { DataTable } from ''{{"js/sites/intro.js"|file}}'';'
01255aa65b19e309:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge
  en: >-
    Our data set has <span data-render="Literal(n)"></span> entries
017bf663332d1818:
  de: x_j = X_g - \sum\limits_{i \ne j}^N x_i
  en: x_j = X_g - \sum\limits_{i \ne j}^N x_i
0262559e8ccb9a29:
  de: >-
    Dies erschwert dem Angreifer die Schätzung des Ursprungswertes
    $ x _ j $, denn er/sie kennt den hinzugefügten Zufallswert
    $ n $ nicht:
  en: >-
    This makes it difficult for the attacker to estimate the original
    value $ x _ j $, because he/she does not know the added random
    value $ n $:
041136667569842c:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge. Legen wir ein maximales Einkommen von 100.000 €
    zu Grunde, beträgt die Sensitivität damit $\mathcal{S}(\bar{E})
    = $ <span data-render="Literal(Math.floor(100000/n))"></span>.
  en: >-
    Our dataset has <span data-render="Literal(n)"></span> entries.
    If we assume a maximum income of 100,000 €, the sensitivity
    is $\mathcal{S}(\bar{E}) = $ <span data-render="Literal(Math.floor(100000/n))"></span>.
04251a1a2300da15:
  de: '  <div class=''face side''></div>'
  en: '  <div class=''face side''></div>'
0607b267a918ae63:
  de: '  language = ''{{site.config.lang}}'''
  en: '  language = ''{{site.config.lang}}'''
062ee26c5aa93013:
  de: >-
    wobei $ x_i = 1 $ falls das Einkommen des Datenpunktes $i$
    im Bereich der Gruppe $ g $ liegt, und $ x_i = 0 $ andernfalls:
  en: >-
    where $ x_i = 1 $ if the income of the data point $i$ is in
    the range of the group $ g $, and $ x_i = 0 $ otherwise:
06666bb55e0013a3:
  de: '  render(cubesElement, DataCubes, data)'
  en: '  render(cubesElement, DataCubes, data)'
06c6079a7fe6254c:
  de: >-
    Generell repräsentieren wir Daten im Folgenden als einzelne
    Blöcke. Ein roter Block repräsentiert vertrauliche, personenbezogene
    Daten. Ein grüner Block () hingegen anonyme oder aggregierte
    Daten ohne vermeintlichen Personenbezug.
  en: >-
    In general, we represent data as individual blocks in the
    following. A red block represents confidential, personal data.
    A green block (), on the other hand, represents anonymous
    or aggregated data without any alleged personal reference.
0985dab4f0cb3b0e:
  de: '  {{geometricNoise}}'
  en: '  {{geometricNoise}}'
0a190c0b2ddc8d2e:
  de: >-
    Unser Datensatz hat <span data-render="Cardinality(n)"></span>
    Einträge
  en: >-
    Our data set has <span data-render="Cardinality(n)"></span>
    entries
0a393e506a020bb9:
  de: '{{geometricNoise}}'
  en: '{{geometricNoise}}'
0aef5d5a742390d8:
  de: <div class="cube">cube</div>
  en: <div class="cube">cube</div>
0b6233d4c302a303:
  de: '      values.push(geometricNoise(0.5, true))'
  en: '      values.push(geometricNoise(0.5, true))'
0d73ad0cde568bbf:
  de: '  x_i = \left\{\begin{array}{rcl}'
  en: '  x_i = \left\{\begin{array}{rcl}'
0dc6c99c53567b64:
  de: 0 & , & E_i \notin [E^g_\mathrm{min},E^g_\mathrm{max}] \\
  en: 0 & , & E_i \notin [E^g_\mathrm {min},E^g_\mathrm {max}]
    \\
0e8a4dc49074e8df:
  de: >-
    Je höher der Wert $\alpha$, umso mehr Informationen kann ein
    Angreifer potentiell aus einem beobachteten Ergebniswert ableiten.
    Um den schlimmstmöglichen Fall zu finden, müssen wir dieses
    Wahrscheinlichkeitsverhältnis über alle möglichen Ergebnismengen
    betrachten:
  en: >-
    The higher the value $\alpha$, the more information an attacker
    can potentially derive from an observed outcome value. To
    find the worst case, we need to consider this likelihood ratio
    over all possible result sets:
0ecc22d04d901b21:
  de: X = a
  en: X = a
0edd0ee981a737da:
  de: '  console.log(testStatistic)'
  en: '  console.log(testStatistic)'
0f60acfec97f3042:
  de: '    // {{''intro.exact.calculate-frequencies''|translate}}'
  en: '    // {{''intro.exact.calculate-frequencies''|translate}}'
114827cc5c576926:
  de: '      let p = Math.exp(-epsilon)'
  en: '      let p = Math.exp(-epsilon)'
128e827b1802737f:
  de: x_i = \left\{\begin{array}{rl}
  en: x_i = \left\{\begin{array}{rl}
1306f6aeb5f4ef54:
  de: >-
    Allerdings gibt es immer noch Randfälle, bei denen solche
    verrauschten Daten Ursprungswerte preisgeben können. Hierzu
    ein Beispiel: Wir fügen dem Ergebnis von oben einen zufälligen
    Wert im Bereich $[-3, 3]$ hinzu. Wir wiederholen dies und
    tragen die Häufigkeit der beobachteten Werte auf. Wie vorher
    markieren grüne Balken das Ergebnis für den Datensatz $D$,
    und rote Balken das Ergebnis für den Datensatz $D'$.
  en: >-
    However, there are still edge cases where such noisy data
    can reveal origin values. Here is an example: We add a random
    value in the range $[-3, 3]$ to the result from above. We
    repeat this and plot the frequency of the observed values.
    As before, green bars mark the result for the data set $D$,
    and red bars mark the result for the data set $D'$.
13e5ed8122794344:
  de: '  language = {{site.lang}}'
  en: '  language = {{site.lang}}'
141e001abb0bfc37:
  de: >-
    Entscheidend für den Angreifer ist das Verhältnis der Wahrscheinlichkeiten
    der beobachteten Werte: Ist ein gegebener Wert in $ D $ und
    $ D' $ gleich wahrscheinlich, kann der Angreifer im Besten
    Fall nur raten, wie der Datenpunkt $ x _ j $ zu dem Ergebnis
    beigetragen hat. Je stärker jedoch das Verhältnis von einer
    von 1 abweicht, umso mehr Informationen liefert das beobachtete
    Ergebnis dem Angreifer. In dem obigen Fall beträgt die Wahrscheinlichkeit,
    dass ein Angreifer unsere Daten aufdeckt bei immerhin 25%!
  en: >-
    Crucial for the attacker is the ratio of the probabilities
    of the observed values: If a given value in $ D $ and $ D'
    $ is equally likely, the attacker can at best only guess how
    the data point $ x _ j $ contributed to the result. However,
    the more the ratio of one differs from 1, the more information
    the observed result provides to the attacker. In the above
    case, the probability that an attacker will uncover our data
    is still 25%!
153252309eec394e:
  de: <div class="cube is-active">
  en: <div class="cube is-active">
1572622edf270476:
  de: >-
    Fällt Ihnen hier ein Problem auf? Nein? Dann schauen Sie mal
    auf die Ränder der Häufigkeitsverteilung: Durch Hinzufügen
    des Differenz-Datensatzes verschiebt sich die Wahrscheinlichkeitsverteilung
    maximal um den Betrag 1 nach rechts (falls der Datenpunkt
    Teil der betrachteten Gruppe ist). D.h. beobachtet ein Angreifer
    den Wert ganz rechts, weiß er/sie sofort, dass der gesuchte
    Datenpunkt in der Gruppe sein muss, und hat damit das Einkommen
    der Person aufgedeckt. Warum? Schauen wir uns dazu die Häufigkeiten
    an:
  en: >-
    Do you notice a problem here? No? Then take a look at the
    edges of the frequency distribution: By adding the difference
    data set, the probability distribution shifts to the right
    by a maximum amount of 1 (if the data point is part of the
    group under consideration). I.e., if an attacker observes
    the value on the far right, he/she immediately knows that
    the data point they are looking for must be in the group,
    and has thus uncovered the person's income. Why? Let's look
    at the frequencies for this:
169a3735c2ce0923:
  de: '  test'
  en: '  test'
177f7257b7c785f7:
  de: <div id="result-exact"></div>
  en: <div id="result-exact"></div>
18140a9a324f50f9:
  de: '    const { values, valuesD, ticks } = tests;'
  en: '    const { values, valuesD, ticks } = tests;'
18a5818faf036753:
  de: '  X_g = \sum\limits_{i=1}^N x_i'
  en: '  X_g = \sum\limits_{i=1}^N x_i'
18e9f2912c16782b:
  de: '          if (Math.random() > 0.5)'
  en: '          if (Math.random() &gt; 0.5)'
194917bf91dbd8e6:
  de: '  language = ''{{site.lang}}'''
  en: '  language = ''{{site.lang}}'''
194ff4ea964b5c19:
  de: '  \begin{equation}'
  en: '  \begin {equation}'
1ab1fdd9329a748f:
  de: '  console.log(render);'
  en: '  console.log(render);'
1d3f01bbf9d48d0c:
  de: <div id="frequency-table">
  en: <div id="frequency-table">
1f0293e875a3a09f:
  de: '  console.log(window.testValues)'
  en: '  console.log(window.testValues)'
218a8ff2c00a9a3e:
  de: '      if p < 1e-6 {'
  en: '      if p &lt; 1e-6 {'
21a7f2f1969acbfd:
  de: '  renderAll({DataTable, DataCubes}, {data})'
  en: '  renderAll({DataTable, DataCubes}, {data})'
230a626c99da9012:
  de: '      let k = Math.floor(Math.log(1-pe)/Math.log(p))'
  en: '      let k = Math.floor(Math.log(1-pe)/Math.log(p))'
2522ac34242d6310:
  de: <div class="cube">
  en: <div class="cube">
25363523569766f8:
  de: '  renderAll({DataTable, DataCubes, Cube, data})'
  en: '  renderAll({DataTable, DataCubes, Cube, data})'
257af10575e8f785:
  de: >-
    <script type="module" src="{{'js/render.js'|file}}"></script>
  en: >-
    <script type="module" src="{{'js/render.js'|file}}"></script>
2670b842e53709ee:
  de: '<div style="display: flex; flex-direction: column">'
  en: '<div style="display: flex; flex-direction: column">'
26d2de241e54dfe6:
  de: '                   && row.income < incomeGroup.max).length'
  en: >2-
                       && row.income &lt; incomeGroup.max).length
28d86778615f6af4:
  de: '    }'
  en: '    }'
2a44168318e224e1:
  de: '        }'
  en: '        }'
2a71a904e39b4d11:
  de: '      return k'
  en: '      return k'
2b1c96af70df6315:
  de: '        ratio = 1.0/ratio'
  en: '        ratio = 1.0/ratio'
2b431bf2a54791fc:
  de: >-
    Um solche Angriffe zu erschweren, könnten wir dem Ergebniswert
    $X_g$ einen Zufallswert $n$ hinzufügen: $ X _ g' = X _ g +
    n $
  en: >-
    To make such attacks more difficult, we could add a random
    value $n$ to the result value $X_g$: $ X _ g' = X _ g + n
    $
2bb52a1eefbbd4dd:
  de: X_g = \sum\limits_{i=1}^N x_i
  en: X_g = \sum\limits_{i=1}^N x_i
2c100c1c5df29105:
  de: <!--translate(ignore)-->
  en: <!--translate(ignore)-->
2c6a2aa21549b874:
  de: '    testStatistic.push(values[i]/valuesD[i])'
  en: '    testStatistic.push(valuesi/valuesDi)'
2c8d5382c498bfcf:
  de: <div id="cubes"></div>
  en: <div id="cubes"></div>
2d06a52db7ec56ca:
  de: '  <h2>{{''d.title''|translate}}</h2>'
  en: '  <h2>{{''d.title''|translate}}</h2>'
2d6bc211ca7e3345:
  de: >-
    Das heißt entscheidend für die Sicherheit unserer rauschbasierten
    Anonymisierung ist das minimale (oder maximale) Verhältnis
    der Wahrscheinlichkeiten für einen gegebenen Ergebniswert
    für die beiden Differenzdatensätze $ D $ und $ D' $:
  en: >-
    That is, crucial to the security of our noise-based anonymization
    is the minimum (or maximum) ratio of the probabilities for
    a given outcome value for the two difference datasets $ D
    $ and $ D' $:
2da1ee747334f043:
  de: '  <h2>{{''intro.d.title''|translate}}</h2>'
  en: '  <h2>{{''intro.d.title''|translate}}</h2>'
2df2d1e49292add5:
  de: '## Beispiel: Geometrischer Mechanismus'
  en: '## Example: Geometric mechanism'
2e2256a682a6b71c:
  de: '  console.log(window)'
  en: '  console.log(window)'
2e4f465cfd00a871:
  de: '  <script type="module">'
  en: '  <script type="module">'
301e6359c0d74f4d:
  de: <div class="cube is-red is-xl">
  en: <div class="cube is-red is-xl">
3155ff338ae4600b:
  de: '        testStatistic.push(ratio)'
  en: '        testStatistic.push(ratio)'
31daaa8483c00323:
  de: '    const geometricNoise = (epseilon, symmetric) => {'
  en: '    const geometricNoise = (epseilon, symmetric) =&gt;
    {'
3237711d256dc535:
  de: '## '
  en: '## '
3255a1b77077940d:
  de: '  const tableElement = document.getElementByID(''table'');'
  en: '  const tableElement = document.getElementByID(''table'');'
32576558addad4bb:
  de: >-
    Generell repräsentieren wir Daten im Folgenden als einzelne
    Blöcke. Ein roter Block <span data-render="Cube({color: 'red',
    size: 'xs'})"></span> repräsentiert vertrauliche, personenbezogene
    Daten. Ein grüner Block <span data-render="Cube({color: 'green',
    size: 'xs'})"></span> hingegen anonyme oder aggregierte Daten
    ohne vermeintlichen Personenbezug.
  en: >-
    In general, we represent data as individual blocks in the
    following. A red block <span data-render="Cube({color: 'red',
    size: 'xs'})"></span> represents confidential, personal data.
    A green block <span data-render="Cube({color: 'green', size:
    'xs'})"></span>, on the other hand, represents anonymous or
    aggregated data without any alleged personal reference.
33aea5142b31191b:
  de: '  <div class=''face front''></div>'
  en: '  <div class=''face front''></div>'
3479a6ff733e44ea:
  de: '  language = ''{{site.language}}'''
  en: '  language = ''{{site.language}}'''
355d643374d7b953:
  de: '  renderAll({DataTable, DataCubes, Cube, ResultBoxes, data})'
  en: '  renderAll({DataTable, DataCubes, Cube, ResultBoxes, data})'
357d6f0344a5a2e5:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge. Legen wir ein maximales Einkommen von 100.000 €
    zu Grunde, beträgt die Sensitivität damit $\mathcal{S}(\bar{E})
    = $ <span data-render="Literal(10"></span>.
  en: >-
    Our dataset has <span data-render="Literal(n)"></span> entries.
    If we assume a maximum income of 100,000 €, the sensitivity
    is $\mathcal{S}(\bar{E}) = $ <span data-render="Literal(10"></span>.
370f2b3e0e5f7083:
  de: '  barChart("result-exact", [[1,2,3,4]], {});'
  en: '  barChart("result-exact", [[1,2,3,4]], {});'
38fb48d86f1dbbd5:
  de: >-
    Unser Datensatz hat <span data-render="Cardinality({n})"></span>
    Einträge
  en: >-
    Our data set has <span data-render="Cardinality({n})"></span>
    entries
3910c4a794b32f19:
  de: '      d.filter(row => row.income >= incomeGroup.min'
  en: '      d.filter(row =&gt; row.income &gt;= incomeGroup.min'
3973907c7954799c:
  de: '  import { barChart } from ''{{"js/plotting.js"|file}}'';'
  en: '  import { barChart } from ''{{"js/plotting.js"|file}}'';'
3a91a5de254e06b1:
  de: >-
    Je höher der Wert $\alpha$, umso mehr Informationen kann ein
    Angreifer im schlimmsten Fall aus einem beobachteten Ergebniswert
    ableiten.
  en: >-
    The higher the value $\alpha$, the more information an attacker
    can derive from an observed result value in the worst case.
3b3b16af1ffd6fea:
  de: >-
    <div id="cubes-dp" data-render="DataCubes({data, color: 'green'})">
  en: >-
    <div id="cubes-dp" data-render="DataCubes({data, color: 'green'})">
3c9e730afcf1566b:
  de: '  const { values, valuesD, ticks } = window.tests;'
  en: '  const { values, valuesD, ticks } = window.tests;'
3cdeb9a9206c2512:
  de: >-
    wobei $ x _i = 1 $ falls das Einkommen des Datenpunktes $
    i $ im Bereich der Gruppe $ g $ liegt, und $ x _ i = 0 $ andernfalls:
  en: >-
    where $ x _i = 1 $ if the income of the data point $ i $ is
    in the range of the group $ g $, and $ x _ i = 0 $ otherwise:
3d8ad43fb5841776:
  de: >-
    Ändern Sie den Wert von $ \epsilon $, um ein Gefühl dafür
    zu bekommen, wie der Parameter die Genauigkeit der Ergebniswerte
    und die Erfolgswahrscheinlichkeit eines Angreifers beeinflusst.
  en: >-
    Change the value of $ \epsilon $ to get a feel for how the
    parameter affects the accuracy of the result values and the
    likelihood of success for an attacker.
3f389450b1d1a143:
  de: '      let ratio = values[i]/valuesD[i]'
  en: '      let ratio = valuesi/valuesDi'
3f9b8761709a61ae:
  de: >-
    \frac{\mathrm{P}(X_g = x, Y_g = y|D)}{\mathrm{P}(X_g = x,
    Y_g = y|D')} = \frac{\mathrm{P}(X_g = x|D)}{\mathrm{P}(X_g
    = x|D')}\cdot \frac{\mathrm{P}(Y_g = x|D)}{\mathrm{P}(Y_g
    = x|D')} \le \alpha^2 = \exp{2\epsilon}
  en: >-
    \frac {\mathrm{P}(X_g = x, Y_g = y|D)}{\mathrm{P}(X_g = x,
    Y_g = y|D')} = \frac {\mathrm{P}(X_g = x|D)}{\mathrm{P}(X_g
    = x|D')}\cdot \frac {\mathrm{P}(Y_g = x|D)}{\mathrm{P}(Y_g
    = x|D')} \le \alpha^2 = \exp {2\epsilon}
402b45c31aa6f767:
  de: '  render(tableElement, DataTable(data))'
  en: '  render(tableElement, DataTable(data))'
40b9552b58c8951b:
  de: >2-
      import { render, renderAll } from '{{"js/render.js"|file}}';
  en: >2-
      import { render, renderAll } from '{{"js/render.js"|file}}';
40bbbd6ccbd9f9c9:
  de: '        return -k'
  en: '        return -k'
425f798714a8fbe5:
  de: <div class="cube is-green is-sm">
  en: <div class="cube is-green is-sm">
42b828c62e45b528:
  de: '  language = ''{{lang}}'''
  en: '  language = ''{{lang}}'''
44446ec5e48889c4:
  de: <div class="chart box" id="geometric-noise-example">
  en: <div class="chart box" id="geometric-noise-example">
448e6d02b3cde12f:
  de: '  for(let i=0;i<values.length;i++){'
  en: '  for(let i=0;i&lt;values.length;i++){'
457de1ab9da35e10:
  de: '    barChart("geometric-noise-example", [values], {});'
  en: '    barChart("geometric-noise-example", [values], {});'
46711101d4c2ae92:
  de: '  <span class="face right"></span>'
  en: '  <span class="face right"></span>'
485feec58a6e7906:
  de: '# Unsere Daten'
  en: '# Our data'
4941aa473d18feb7:
  de: '<div style="display: flex; flex-direction: row; gap: 20px;">'
  en: '<div style="display: flex; flex-direction: row; gap: 20px;">'
4c55e47554c70582:
  de: \begin{equation*}
  en: \begin {equation*}
4c57a8afdb033368:
  de: '  </div>'
  en: '  </div>'
4cc1666bb3c7ac15:
  de: console.log("hi")
  en: console.log("hi")
4d0259fdce27e5f2:
  de: <div class="chart sick box" id="geometric-noise-example">
  en: <div class="chart sick box" id="geometric-noise-example">
4d22cf1682ed1b13:
  de: >2-
      import { DataTable, DataCubes } from '{{"js/sites/intro.js"|file}}';
  en: >2-
      import { DataTable, DataCubes } from '{{"js/sites/intro.js"|file}}';
4d62d67ade3c0eb7:
  de: >-
    Generell repräsentieren wir Daten im Folgenden als einzelne
    Blöcke. Ein roter Block (<span data-render="Cube({color: 'red'})"></span>)repräsentiert
    vertrauliche, personenbezogene Daten. Ein grüner Block (<span
    data-render="Cube({color: 'green'})"></span>) hingegen anonyme
    oder aggregierte Daten ohne vermeintlichen Personenbezug.
  en: >-
    In general, we represent data as individual blocks in the
    following. A red block (<span data-render="Cube({color: 'red'})"></span>)represents
    confidential, personal data. A green block (<span data-render="Cube({color:
    'green'})"></span>), on the other hand, represents anonymous
    or aggregated data without any alleged personal reference.
506dade61e47d777:
  de: '      if (pv > p) {'
  en: '      if (pv &gt; p) {'
51fdece3d50729b5:
  de: <div id="table">
  en: <div id="table">
52dc099602f72e3d:
  de: >-
    <div id="table" data-render="this.DataTable(this.data)"></div>
  en: >-
    <div id="table" data-render="this.DataTable(this.data)"></div>
5603737f368bd984:
  de: >-
    In unserem Beispiel oben hat das Hinzufügen eines Datenpunktes
    zu unserem Datensatz das Ergebnis maximal um einen Betrag
    von 1 verändert (da wir Häufigkeiten berechnet haben). Was
    aber, wenn wir eine Funktion berechnen möchten, bei der ein
    einzelner Datenpunkt einen größeren Effekt auf das Ergebnis
    hat? Beispielsweise könnten wir am Mittelwert interessiert
    sein, der sich berechnet als
  en: >-
    In our example above, adding a data point to our data set
    changed the result by at most an amount of 1 (since we were
    calculating frequencies). But what if we want to calculate
    a function where a single data point has a larger effect on
    the result? For example, we might be interested in the mean,
    which is calculated as
56fad126f2d4276c:
  de: 1 & , & E_i \in [E^g_\mathrm{min},E^g_\mathrm{max}] \\
  en: 1 & , & E_i \in [E^g_\mathrm {min},E^g_\mathrm {max}] \\
57ae117778f9e160:
  de: 1 & , & E_i \in [E^g_{min},E^g_{max}] \\
  en: 1 & , & E_i \in [E^g_{min},E^g_{max}] \
57db60465194ed75:
  de: >2-
      import { DataTable, DataCubes, Cube, ResultBoxes } from
    '{{"js/sites/intro.js"|file}}';
  en: >2-
      import { DataTable, DataCubes, Cube, ResultBoxes } from
    '{{"js/sites/intro.js"|file}}';
583e29498e2b0a6f:
  de: >-
    <div id="cubes-dp" data-render="DataCubes({dataD, color: 'green'})">
  en: >-
    <div id="cubes-dp" data-render="DataCubes({dataD, color: 'green'})">
5861cfd84d61e060:
  de: '{% set distribution %}'
  en: '{% set distribution %}'
5b63e5b2097fc690:
  de: <script>
  en: <script>
5b64d6fd384b9050:
  de: <div id="table" data-render="DataTable(this.data)">
  en: <div id="table" data-render="DataTable(this.data)">
5bf8aa57fc5a6bc5:
  de: dddd
  en: dddd
5c04c294990da5ff:
  de: >-
    <div id="table" data-render="DataTable([...this.data.slice(0,10),{name:
    '...', income: '...'}])">
  en: >-
    <div id="table" data-render="DataTable([...this.data.slice(0,10),{name:
    '...', income: '...'}])">
5c1cdad8a386d888:
  de: '    const { tests } = window;'
  en: '    const { tests } = window;'
5cc3208cb904c8c5:
  de: '  {% endset -%}'
  en: '  {% endset -%}'
5fc8b473001c6a70:
  de: >-
    <div id="cubes-dp" data-render="DataCubes({data: dataD, color:
    'green'})">
  en: >-
    <div id="cubes-dp" data-render="DataCubes({data: dataD, color:
    'green'})">
612858d6f83d566e:
  de: '## Ergebnis'
  en: '## Result'
617cf1b878c6d992:
  de: <div id="cubes" data-render="DataCubes(data)">
  en: <div id="cubes" data-render="DataCubes(data)">
620b7be47d622f85:
  de: '  renderAll()'
  en: '  renderAll()'
621f6baf25595710:
  de: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#a73'}], xTicks: ticks, height:\
    \ 200});    "
  en: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#a73'}], xTicks: ticks, height:\
    \ 200});    "
62685374caf347ea:
  de: "    barChart(\"test-statistic\", [testStatistic], {xTicks:\
    \ ticks, height: 200});    "
  en: "    barChart(\"test-statistic\", [testStatistic], {xTicks:\
    \ ticks, height: 200});  "
62d0f7a54cf5d079:
  de: >-
    wobei $e _ i$ das jeweilige Einkommen einer Person ist. Wie
    stark ein einzelner Datenpunkt für diese Funktion das Ergebnis
    beeinflussen kann, hängt zum einen von dem möglichen Wertebereich
    (hier also der möglichen Gehaltsspanne) ab, als auch von der
    Anzahl der Datenpunkte $N$. Ist $e _ \mathrm{max}$ das maximal
    zu betrachtende Gehalt beträgt die **Sensitivität** des Mittelwertes
    $\bar{E}$ daher
  en: >-
    where $e _ i$ is the respective income of a person. The extent
    to which a single data point for this function can influence
    the result depends on the one hand on the possible range of
    values (in this case the possible salary range), and on the
    other hand on the number of data points $N$. If $e _ \mathrm{max}$
    is the maximum salary to be considered, the **sensitivity
    of** the mean value $\bar{E}$ is therefore
62e01774f43065c4:
  de: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [1.0, xTicks: ticks, height: 200});    "
  en: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [1.0, xTicks: ticks, height: 200});  "
63551eee25cfc411:
  de: 1 & , & E_i \in [E^g_{min},G^g_{max}]
  en: 1 & , & E_i \in [E^g_{min},G^g_] [{max}]
662a51caa9ae5ea8:
  de: '  import { render } from ''{{''js/render.js''|file}}'';'
  en: '  import { render } from ''{{''js/render.js''|file}}'';'
67e900f6f98cd8f9:
  de: '  ]'
  en: '  ]'
6866fe96020f90c1:
  de: >-
    Entscheidend für den Angreifer ist das Verhältnis der Wahrscheinlichkeiten
    der beobachteten Werte: Ist ein gegebener Wert in $ D $ und
    $ D' $ gleich wahrscheinlich, kann der Angreifer im Besten
    Fall nur raten, wie der Datenpunkt $ x _ j $ zu dem Ergebnis
    beigetragen hat. Je stärker jedoch das Verhältnis von einer
    von 1 abweicht, umso mehr Informationen liefert das beobachtete
    Ergebnis dem Angreifer.
  en: >-
    Crucial for the attacker is the ratio of the probabilities
    of the observed values: If a given value in $ D $ and $ D'
    $ is equally likely, the attacker can at best only guess how
    the data point $ x _ j $ contributed to the result. However,
    the more the ratio of one differs from 1, the more information
    the observed result provides to the attacker.
691b1d065da10cb4:
  de: '    console.log(testStatistic)'
  en: '    console.log(testStatistic)'
6b928a3b4402e59d:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge. Legen wir ein maximales Einkommen von 100.000 €
    zu Grunde, beträgt die Sensitivität damit $\mathcal{S}(\bar{E})
    = $ <span data-render="Literal(100000/n)"></span>.
  en: >-
    Our dataset has <span data-render="Literal(n)"></span> entries.
    If we assume a maximum income of 100,000 €, the sensitivity
    is $\mathcal{S}(\bar{E}) = $ <span data-render="Literal(100000/n)"></span>.
6bac6ff0a57877d6:
  de: '# Datensatz $ D'' $'
  en: '# Data set $ D'' $'
6c179f21e6f62b62:
  de: '  '
  en: '  '
6c9656210a020271:
  de: </script>
  en: </script>
6cee40f3ff5bb96a:
  de: \end{equation}
  en: \ending {equation}
6d274ea89a215540:
  de: '      let pv = Math.random()'
  en: '      let pv = Math.random()'
6f00d763ab5bfd19:
  de: '# Testen von DP-Mechanismen'
  en: '# Testing DP mechanisms'
6fcf3d4a4d8e9555:
  de: Das ist das Ergebnis
  en: This is the result
736a88feb2471bf3:
  de: '      if (p < 1e-6) {'
  en: '      if (p &lt; 1e-6) {'
737db166c79ae98e:
  de: '  }'
  en: '  }'
77885ad5ce27a0ac:
  de: '        } else {'
  en: '        } else {'
77f91e37c5571b91:
  de: >-
    Der Datensatz $ D' $ ist bis auf einen einzelnen entfernten
    Datenpunkt <span data-render="Cube({color: 'red', size: 'xs'})">
    identisch zum Datensatz $ D $. Diesen entfernten Datenpunkt
    nennen wir im Folgenden Differenzpunkt.
  en: "The dataset $ D' $ is <span data-render=\"Cube({color:\
    \ 'red', size: 'xs'})\">identical to the dataset $ D $</span>\
    \ except for a single remote data point. <span data-render=\"\
    Cube({color: 'red', size: 'xs'})\">In the following, we call\
    \ this remote data point the difference point.</span> "
78e89faf5d790e5e:
  de: '  ssss'
  en: '  ssss'
7a7654e20e8ef7be:
  de: '      let k'
  en: '      let k'
7b712881ca90da61:
  de: '      ratio /= Math.exp(tests.epsilon)'
  en: '      ratio /= Math.exp(tests.epsilon)'
7b95a494fd251ebd:
  de: '  renderAll({DataTable, DataCubes, data})'
  en: '  renderAll({DataTable, DataCubes, data})'
8088bc31fa3811c0:
  de: >-
    Um solche Angriffe zu erschweren, könnten wir dem Ergebniswert
    $X_g$ einen Zufallswert $n$ hinzufügen: $ X _ g' = X _ g +
    n $. Dies erschwert dem Angreifer die Schätzung des Ursprungswertes
    $ x _ j $, denn er/sie kennt den hinzugefügten Zufallswert
    $ n $ nicht:
  en: >-
    To make such attacks more difficult, we could add a random
    value $n$ to the result value $X_g$: $ X _ g' = X _ g + n
    $. This makes it difficult for the attacker to estimate the
    original value $ x _ j $, because he/she does not know the
    added random value $ n $:
82e33956c07a5fde:
  de: >-
    wobei $ x_i = 1 $ falls das Einkommen des Datenpunktes $ i
    $ im Bereich der Gruppe $ g $ liegt, und $ x_i = 0 $ andernfalls:
  en: >-
    where $ x_i = 1 $ if the income of the data point $ i $ is
    in the range of the group $ g $, and $ x_i = 0 $ otherwise:
83c9ec053a9e4906:
  de: '  setInterval(() => {'
  en: '  setInterval(() =&gt; {'
84a5e715899e1c4b:
  de: '# '
  en: '# '
852d025864123c89:
  de: '{% endfilter %}'
  en: '{% endfilter %}'
85caafc15b0814ee:
  de: '  \end{array}\right.'
  en: '  \end {array}\right.'
865a950ee81e8ebc:
  de: '  <div class="face top"></div>'
  en: '  <div class="face top"></div>'
882b185a7ee5eaba:
  de: '      let pe = 1.0 - p + p*pv'
  en: '      let pe = 1.0 - p + p*pv'
883dece2134e9e46:
  de: 1 & , & E_i \in [E^g_\mathrm{min},E^g_{max}] \\
  en: 1 & , & E_i \in [E^g_\mathrm {min},E^g_{max}] \\
88a8ed669b7805bb:
  de: '  console.log(window.tests)'
  en: '  console.log(window.tests)'
89a5d557b9e985a5:
  de: >-
    Wir repräsentieren diese Daten im Folgenden als einzelne Blöcke.
  en: >-
    We represent this data as individual blocks in the following.
89cb18c6fae4accd:
  de: '  <h2>{{''intro.dp.title''|translate}}</h2>'
  en: '  <h2>{{''intro.dp.title''|translate}}</h2>'
89d3e6c2a59bfc61:
  de: '  import { render } from ''{{"js/render.js"|file}}'';'
  en: '  import { render } from ''{{"js/render.js"|file}}'';'
8a1384d6f4dbdbcd:
  de: '            return 0'
  en: '            return 0'
8c622b24dab4d168:
  de: >2-
      barChart("test-statistic", [testStatistic], {classNames:
    ['is-green', 'is-red'], xTicks: ticks, height: 200});
  en: >2-
      barChart("test-statistic", [testStatistic], {classNames:
    ['is-green', 'is-red'], xTicks: ticks, height: 200});
8da2256b5ded4e22:
  de: '          return 0'
  en: '          return 0'
8ecbaf4764e5a14b:
  de: '  <span class="face top"></span>'
  en: '  <span class="face top"></span>'
91e6122301a65a4a:
  de: <div class="cube is-red">
  en: <div class="cube is-red">
950e7b6e240162de:
  de: >-
    Ein Angreifer, der bis auf einen einzigen Wert $x _ j $ alle
    Datenwerte $x _ i$ kennt, kann aus dem Ergebnis $ X _ g $
    leicht den fehlenden Wert $ x _ j $ berechnen:
  en: >-
    An attacker who knows all data values $x _ i$ except for a
    single value $x _ j $ can easily calculate the missing value
    $ x _ j $ from the result $ X _ g $:
95ca71aac1c604b3:
  de: '# Datensatz $ D $'
  en: '# Data set $ D $'
96095dace0802704:
  de: '  <div class="chart sick box" id="result-exact"></div>'
  en: '  <div class="chart sick box" id="result-exact"></div>'
9827ff7a0d28ce73:
  de: <div id="table" data-render="DataTable(data)"></div>
  en: <div id="table" data-render="DataTable(data)"></div>
985e3d648149422c:
  de: x_j = X_g - \sum\limit_{i \ne j}^N x_i
  en: x_j = X_g - \sum\limit_{i \ne j}^N x_i
9889c96dedec802d:
  de: '<div style="margin-right: 20px;">'
  en: '<div style="margin-right: 20px;">'
9b29899409358cb4:
  de: '# Hinzufügen von Rauschen'
  en: '# Adding noise'
9b5f697379164f98:
  de: '        testStatistic.push(0)'
  en: '        testStatistic.push(0)'
9b878fc5856223e4:
  de: '  const tableElement = document.getElementById(''table'');'
  en: '  const tableElement = document.getElementById(''table'');'
9be5d0dcc648f53a:
  de: >-
    Generell repräsentieren wir Daten im Folgenden als einzelne
    Blöcke. Ein roter Block (<span data-render="Cube({color: 'red',
    size: 'xs'})"></span>)repräsentiert vertrauliche, personenbezogene
    Daten. Ein grüner Block (<span data-render="Cube({color: 'green'})"></span>)
    hingegen anonyme oder aggregierte Daten ohne vermeintlichen
    Personenbezug.
  en: >-
    In general, we represent data as individual blocks in the
    following. A red block (<span data-render="Cube({color: 'red',
    size: 'xs'})"></span>)represents confidential, personal data.
    A green block (<span data-render="Cube({color: 'green'})"></span>),
    on the other hand, represents anonymous or aggregated data
    without any alleged personal reference.
9befc599c061a619:
  de: '      if (symmetric && Math.random() < 0.5) {'
  en: '      if (symmetric && Math.random() &lt; 0.5) {'
9ca155e0e0aedc0e:
  de: '# Weiterführende Themen'
  en: '# Further topics'
9d22b5a9480ea891:
  de: <div id="result-boxes" data-render="ResultBoxes()"
  en: '&lt;div id="result-boxes" data-render="ResultBoxes()"'
9e4527fb137f0b37:
  de: <div>
  en: <div>
a08ce592d13f6d7c:
  de: '  render(tableElement, DataTable, data)'
  en: '  render(tableElement, DataTable, data)'
a0d77e1316d1d83d:
  de: 0 & , & E_i \notin [E^g_{min},G^g_{max}] \\
  en: 0 & , & E_i \notin [E^g_{min},G^g_{max}] \\
a0f389de849cb80c:
  de: '  console.log(this)'
  en: '  console.log(this)'
a0fa8d3432210ae7:
  de: '  1 & , & E_i \in [E^g_\mathrm{min},E^g_\mathrm{max}] \\'
  en: '  1 & , & E_i \in [E^g_\mathrm {min},E^g_\mathrm {max}]
    \\'
a3bf2c54848ca1cb:
  de: >-
    wobei $x_i = 1$ falls das Einkommen des Datenpunktes $i$ im
    Bereich der Gruppe $g$ liegt, und $x_i = 0$ andernfalls:
  en: >-
    where $x_i = 1$ if the income of the data point $i$ is in
    the range of the group $g$, and $x_i = 0$ otherwise:
a40f74bd38b0eefb:
  de: >2-
      <div id="cubes-d" data-render="DataCubes({data, color: 'red'})">
  en: >2-
      <div id="cubes-d" data-render="DataCubes({data, color: 'red'})">
a54ebc70d2d74678:
  de: '    for(let i=0;i<values.length;i++){'
  en: '    for(let i=0;i&lt;values.length;i++){'
a715ab659c32cc96:
  de: <div id="cubes" data-render="DataCubes(data)"></div>
  en: <div id="cubes" data-render="DataCubes(data)"></div>
a777d83385611f06:
  de: '  {% set geometricNoise -%}'
  en: '  {% set geometricNoise -%}'
a81a95991b683958:
  de: '{% set jsCode %}'
  en: '{% set jsCode %}'
a980ccd6872b59de:
  de: '    import { barChart } from ''{{"js/plotting.js"|file}}'';'
  en: '    import { barChart } from ''{{"js/plotting.js"|file}}'';'
a9bc5143b4851096:
  de: '  </script>'
  en: '  </script>'
aa6346035b082555:
  de: >2-
      <div style="margin-left: 10px;" id="cubes-d" data-render="DataCubes({data,
    color: 'red'})">
  en: >2-
      <div style="margin-left: 10px;" id="cubes-d" data-render="DataCubes({data,
    color: 'red'})">
aac32651b10f567c:
  de: </div>
  en: </div>
aaeb8a2693aa4137:
  de: <div id="success-rate">
  en: <div id="success-rate">
ad4287736086e068:
  de: \end{array}\right.
  en: \end {array}\right.
ad74d4f3169ebcbf:
  de: '<div style="margin-right: 10px;">'
  en: '<div style="margin-right: 10px;">'
adbb19ee86bd2d61:
  de: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#f77'}], xTicks: ticks, height:\
    \ 200});    "
  en: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#f77'}], xTicks: ticks, height:\
    \ 200});    "
adc9b607490f9be6:
  de: '# Eine erste Statistik'
  en: '# A first statistic'
b094cc1fc365e2fb:
  de: >-
    wobei $ x _ i = 1 $ falls das Einkommen des Datenpunktes $
    i $ im Bereich der Gruppe $ g $ liegt, und $ x _ i = 0 $ andernfalls:
  en: >-
    where $ x _ i = 1 $ if the income of the data point $ i $
    is in the range of the group $ g $, and $ x _ i = 0 $ otherwise:
b1a56134e3b70adb:
  de: >-
    Der Datensatz $ D' $ ist bis auf einen einzelnen entfernten
    Datenpunkt <span data-render="Cube({color: 'red', size: 'xs'})"></span>
    identisch zum Datensatz $ D $. Diesen entfernten Datenpunkt
    nennen wir im Folgenden Differenzpunkt.
  en: >-
    The data set $ D' $ is identical to the data set $ D $ except
    for a single remote data point <span data-render="Cube({color:
    'red', size: 'xs'})"></span>. In the following, we call this
    remote data point the difference point.
b1ce08e182292faf:
  de: >-
    Um den schlimmstmöglichen Fall zu finden, müssen wir dieses
    Wahrscheinlichkeitsverhältnis über alle möglichen Ergebnismengen
    betrachten:
  en: >-
    To find the worst possible case, we need to consider this
    likelihood ratio over all possible outcome sets:
b1d7b5e04558d0f4:
  de: <div id="frequency-table-geometric">
  en: <div id="frequency-table-geometric">
b2a6d9402f3b0e1e:
  de: '## Angriff auf die anonymisierten Daten'
  en: '## Attack on the anonymized data'
b2b01425dff90ad3:
  de: <div class="chart sick box" id="result-exact"></div>
  en: <div class="chart sick box" id="result-exact"></div>
b37c900ec5ded7d4:
  de: '        return 0'
  en: '        return 0'
b5542137ad385324:
  de: >-
    Im folgenden nutzen wir Beispieldaten, die das Einkommen verschiedener
    Personen beschreiben.
  en: >-
    In the following, we use sample data describing the income
    of different individuals.
b63b8a5681f1a5f9:
  de: '    const { tests, dp } = window;'
  en: '    const { tests, dp } = window;'
b6582bc89c437f7a:
  de: >-
    Um solche Angriffe zu erschweren, könnten wir dem Ergebniswert
    $X_g$ einen Zufallswert $n$ hinzufügen: $ X _ g' = X _ g +
    n $ Dies erschwert dem Angreifer die Schätzung des Ursprungswertes
    $ x _ j $, denn er/sie kennt den hinzugefügten Zufallswert
    $ n $ nicht:
  en: >-
    To make such attacks more difficult, we could add a random
    value $n$ to the result value $X_g$: $ X _ g' = X _ g + n
    $ This makes it difficult for the attacker to estimate the
    original value $ x _ j $, because he/she does not know the
    added random value $ n $:
b6eba3ba6ccf9edd:
  de: '  const { tests } = window;'
  en: '  const { tests } = window;'
b745301a9fe97cbd:
  de: '## Umsetzung in Code'
  en: '## Conversion to code'
b80238d83196593b:
  de: >-
    <script type="module" src="{{'js/sites/intro.js'|file}}"></script>
  en: >-
    <script type="module" src="{{'js/sites/intro.js'|file}}"></script>
b858e2a13bbf4991:
  de: '## Angreifen von DP-Mechanismen'
  en: '## Attacking DP mechanisms'
baf8dc953dd75acc:
  de: >2-
      <div id="cubes-dp" data-render="DataCubes({data: dataD,
    color: 'green'})">
  en: >2-
      <div id="cubes-dp" data-render="DataCubes({data: dataD,
    color: 'green'})">
bb3a2f29e76e0d75:
  de: '  renderAll(window)'
  en: '  renderAll(window)'
bb3f83ee7e4e74c1:
  de: '      ratio /= Math.exp(dp.epsilon)'
  en: '      ratio /= Math.exp(dp.epsilon)'
bb66fb83595ecb94:
  de: \begin{equation}
  en: \begin {equation}
bbef5271b6c89ea4:
  de: <div class="chart box" id="test-statistic">
  en: <div class="chart box" id="test-statistic">
bcbb160baf203da1:
  de: <div class="cube"></div>
  en: <div class="cube"></div>
bd3f431598a5da84:
  de: '# Sensitivität'
  en: '# Sensitivity'
bdc27341a40113ae:
  de: '      if (ratio < 1.0)'
  en: '      if (ratio &lt; 1.0)'
bdce37206febeba8:
  de: <div id="table"></div>
  en: <div id="table"></div>
be73d3e884d25b0a:
  de: 0 & , & E_i \notin [E^g_\mathrm{min},E^g_{max}] \\
  en: 0 & , & E_i \notin [E^g_\mathrm {min},E^g_{max}] \\\
bf4d3096a1694195:
  de: '  <div class="face side"></div>'
  en: '  <div class="face side"></div>'
c167865828c19855:
  de: '    {name: "Max Mustermann", income: 53242},'
  en: '    {name: "Max Mustermann", income: 53242} ,'
c1abe070ee4729f0:
  de: 0 & , & E_i \nin [E^g_{min},G^g_{max}] \\
  en: 0 & , & E_i \nin [E^g_{min},G^g_{max}] \
c2213afa3589c5e1:
  de: '  <div>'
  en: '  <div>'
c22adb20526a224d:
  de: '<div style="display: flex; flex-direction: row;">'
  en: '<div style="display: flex; flex-direction: row;">'
c36903fbf5f6f28d:
  de: x_i = \left\{\begin{array}{rcl}
  en: x_i = \left\{\begin{array}{rcl}
c3b3c4e83f9b062e:
  de: '  const { values, valuesD, ticks } = tests;'
  en: '  const { values, valuesD, ticks } = tests;'
c3de7d4935aa97bc:
  de: '{% endset %}'
  en: '{% endset %}'
c4eee1166c5d2288:
  de: '  const data = ['
  en: '  const data = ['
c61a51265636ac6d:
  de: '  const testStatistic = [];'
  en: '  const testStatistic = [];'
c83d4085ca5dfe0a:
  de: '  \end{equation}'
  en: '  \ending {equation}'
c8a5f3b34a70ea51:
  de: '        if (symmetric) {'
  en: '        if (symmetric) {'
c8e2142023a38c28:
  de: >-
    <div id="result-boxes" data-render="ResultBoxes({min: 10,
    max: 20})"
  en: >-
    &lt;div id="result-boxes" data-render="ResultBoxes({min: 10,
    max: 20})"
c93d93b009c6faa8:
  de: '## Testen von DP-Mechanismen'
  en: '## Testing DP mechanisms'
ca5694b305132768:
  de: >-
    Je höher der Wert $\alpha$, umso mehr Informationen kann ein
    Angreifer im schlimmsten Fall aus einem beobachteten Ergebniswert
    ableiten. In der Praxis schreiben wir zusätzlich $\alpha =
    \exp{\epsilon}$, da es uns dies ermöglicht, den Privatsphäre-Verlust
    auch für komplexere Fälle abzuschätzen. Oft wollen wir nämlich
    nicht nur eine Statistik veröffentlichen, sondern gleiche
    mehrere. Z.B. könnten wir zu unseren Einkommensdaten einen
    Mittelwert, die oben betrachteten Häufigkeiten sowie Quantilwerte
    veröffentlichen. Jeder einzelne Datenpunkt würde dann zu allen
    dieser Werte beitragen. Dementsprechend müssen wir nicht nur
    das Wahrscheinlichkeitsverhältnis für einzelne Werte, sondern
    für alle Werte zusammen betrachten um eine Abschätzung des
    Privatsphäre-Verlustes zu erhalten. Geht unser Datenpunkt
    z.B. in zwei unterschiedliche Werte $X _ g $ und $Y _ g$ ein,
    könnte ein Angreifer wiederum die Wahrscheinlichkeiten für
    Wertekombinationen $(X _ g, Y _ g)$ betrachten. Falls die
    Werte $X _ g$ und $ Y _ g$ unabhängig sind, gilt für ihre
    Wahrscheinlichkeiten
  en: >-
    The higher the value $\alpha$, the more information an attacker
    can derive from an observed result value in the worst case.
    In practice, we additionally write $\alpha = \exp{\epsilon}$,
    as this allows us to estimate the privacy loss even for more
    complex cases. Indeed, we often do not want to publish only
    one statistic, but equal several. For example, we might publish
    a mean, the frequencies considered above, and quantile values
    for our income data. Each individual data point would then
    contribute to all of these values. Accordingly, we need to
    consider not only the likelihood ratio for individual values,
    but for all values together to obtain an estimate of the privacy
    loss. For example, if our data point goes into two different
    values $X _ g $ and $Y _ g$, an attacker could again look
    at the probabilities for combinations of values $(X _ g, Y
    _ g)$. If the values $X _ g$ and $ Y _ g$ are independent,
    then their probabilities are
cae841417a97c73a:
  de: <div class='cube'>
  en: <div class='cube'>
cce669907b5a2e88:
  de: <div class="cube is-red is-sm">
  en: <div class="cube is-red is-sm">
cd5019ca9c19688e:
  de: >2-
      import { DataTable, DataCubes, Cube } from '{{"js/sites/intro.js"|file}}';
  en: >2-
      import { DataTable, DataCubes, Cube } from '{{"js/sites/intro.js"|file}}';
cdd5f9a9b7bf319a:
  de: '  0 & , & E_i \notin [E^g_\mathrm{min},E^g_\mathrm{max}]
    \\'
  en: >2-
      0 & , & E_i \notin [E^g_\mathrm {min},E^g_\mathrm {max}]
    \\
cf0d910eda143b3a:
  de: '{% filter highlight(language=''javascript'') %}'
  en: '{% filter highlight(language=''javascript'') %}'
cf6539f162bf5b57:
  de: >-
    Im Folgenden repräsentieren wir einzelne Datensätze als einzelne
    Blöcke.
  en: >-
    In the following, we represent individual records as individual
    blocks.
d077c5dd2b77ab9f:
  de: '### Epsilon'
  en: '### Epsilon'
d10c4f8fdcb44aa8:
  de: '  }, 1000)'
  en: '  }, 1000)'
d138ecd0cb92e92e:
  de: '    const values = []'
  en: '    const values = []'
d226cf5e009383b4:
  de: '  const testStatistic = []'
  en: '  const testStatistic = []'
d29e5e273b4d6774:
  de: '      const ratio = values[i]/valuesD[i]'
  en: '      const ratio = valuesi/valuesDi'
d36c7af8458c6ba4:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge. Legen wir ein maximales Einkommen von 100.000 €
    zu Grunde, beträgt die Sensitivität damit $\mathcal{S}(\bar{E})
    = $ <span data-render="Literal(Math.floor(100000/n))"></span>.
    Um den Mittelwert mithilfe von Differential Privacy zu schützen
    bräuchten wir eigentlich einen anderen Mechanismus, da der
    Wert reel ist und der geometrische Mechanismus nur auf diskrete
    Daten angewandt werden kann. Wir können jedoch den Mittelwert
    diskretisieren, um ihn mit dem Mechanismus verarbeiten zu
    können. Wählen wir das Diskretisierungsintervall identisch
    zur Sensitivität $\mathcal{S}$, brauchen wir unseren Mechanismus
    oben nicht zu modifizieren. Wollen wir eine größere Genauigkeit,
    müssen wir den Mechanismus entsprechend anpassen.
  en: >-
    Our dataset has <span data-render="Literal(n)"></span> entries.
    If we assume a maximum income of 100,000 €, the sensitivity
    is $\mathcal{S}(\bar{E}) = $ <span data-render="Literal(Math.floor(100000/n))"></span>.
    To protect the mean using differential privacy, we would actually
    need a different mechanism, since the value is reel and the
    geometric mechanism can only be applied to discrete data.
    However, we can discretize the mean to be able to process
    it using the mechanism. If we choose the discretization interval
    identical to the sensitivity $\mathcal{S}$, we do not need
    to modify our mechanism above. If we want greater accuracy,
    we need to modify the mechanism accordingly.
d5b611578b11f527:
  de: >-
    wobei $ x _ i = 1 $ falls das Einkommen des Datenpunktes $
    i $ im Bereich der Einkommen aus Gruppe $ g $ liegt $ [E^g
    _ \mathm{min}, E^g _ \mathrm{max}] $, und $ x _ i = 0 $ andernfalls:
  en: >-
    Where $ x _ i = 1 $ if the income of the data point $ i $
    is in the range of income from group $ g $ $ [E^g _ \mathm{min},
    E^g _ \mathrm{max}] $ , and $ x _ i = 0 $ otherwise:
d675f02176294d59:
  de: '  language = ''{{site.config}}'''
  en: '  language = ''{{site.config}}'''
d71061940c4c73c0:
  de: >-
    Unser Datensatz hat <span data-render="Literal(n)"></span>
    Einträge. Legen wir ein maximales Einkommen von 100.000 €
    zu Grunde, beträgt die Sensitivität damit $\mathcal{S}(\bar{E})
    = $ <span data-render="Literal(10)"></span>.
  en: >-
    Our dataset has <span data-render="Literal(n)"></span> entries.
    If we assume a maximum income of 100,000 €, the sensitivity
    is $\mathcal{S}(\bar{E}) = $ <span data-render="Literal(10)"></span>.
d7ad5244a61dbb7b:
  de: '      countD: frequency(dataD),'
  en: '      countD: frequency(dataD),'
d855c12a5449a320:
  de: '    for(let i=0;i<10000;i++){'
  en: '    for(let i=0;i&lt;10000;i++){'
d86fc95339d4b352:
  de: '  language = ''{{site}}'''
  en: '  language = ''{{site}}'''
d96c2c30b1627eea:
  de: >-
    Ändern Sie den Wert von $ \epsilon $, um ein Gefühl dafür
    zu bekommen, wie der Parameter die Genauigkeit der Ergebniswerte
    und die Erfolgswahrscheinlichkeit eines Angreifers beeinflusst.
    Generell gilt: Je kleiner $ \epsilon $, um so geringer ist
    der potentielle Privatsphäre-Verlust für Betroffene, aber
    umso höher ist die Standardabweichung der resultierenden Daten.
  en: >-
    Change the value of $ \epsilon $ to get a sense of how the
    parameter affects the accuracy of the result values and the
    likelihood of success for an attacker. In general, the smaller
    $ \epsilon $, the lower the potential privacy loss for victims,
    but the higher the standard deviation of the resulting data.
da240084a221f00e:
  de: '  <span class="face left"></span>'
  en: '  <span class="face left"></span>'
db405ba385545e66:
  de: '# Ergebnis'
  en: '# Result'
dc11f1ba8da49943:
  de: '  const cubesElement = document.getElementById(''cubes'');'
  en: '  const cubesElement = document.getElementById(''cubes'');'
de44b459e19f4ae1:
  de: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#000', style: 'dotted'}], xTicks:\
    \ ticks, height: 200});    "
  en: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, width: 3, color: '#000', style: 'dotted'}], xTicks:\
    \ ticks, height: 200});    "
df1e3988f3b18a4e:
  de: >-
    <div id="cubes-d" data-render="DataCubes({data, color: 'red'})">
  en: >-
    <div id="cubes-d" data-render="DataCubes({data, color: 'red'})">
df61298ef1831b17:
  de: '    const frequency = (d) => '
  en: '    const frequency = (d) =&gt; '
df6bf0fc42ae5358:
  de: '    console.log(dp)'
  en: '    console.log(dp)'
e132f77714c6ba07:
  de: '    console.log(tests)'
  en: '    console.log(tests)'
e13c0703cbfd1b70:
  de: '  x_j = X_g'' - \sum\limits_{i \ne j}^N x_i - n'
  en: '  x_j = X_g'' - \sum\limits_{i \ne j}^N x_i - n'
e175c4a81b54b553:
  de: '    // {{''intro.exact.store-value''|translate}}'
  en: '    // {{''intro.exact.store-value''|translate}}'
e18e22d406550661:
  de: >-
    Eine der einfachsten Erkenntnisse, die wir aus unseren Daten
    gewinnen können ist die Verteilung der Einkommen der Personen
    im Datensatz. Hierzu bilden wir zunächst Einkommensgruppen.
    Beispielsweise kann eine Gruppe alle Datensätze enthalten
    die ein Einkommen zwischen 50-60 T€ aufweisen. Anschließend
    zählen wir die Anzahl der Datensätze in jeder Gruppe, was
    der statistischen Häufigkeit dieser Gruppe entspricht.
  en: >-
    One of the simplest insights we can gain from our data is
    the distribution of the incomes of the individuals in the
    dataset. To do this, we first form income groups. For example,
    a group may contain all records that have an income between
    50-60k€. We then count the number of records in each group,
    which corresponds to the statistical frequency of that group.
e22df8060c226395:
  de: 1 & , & E_i \in [E^g_{min},G^g_{max}] \\
  en: 1 & , & E_i \in [E^g_{min},G^g_{max}] \
e268e59528e713af:
  de: '      if (isNaN(ratio) || !isFinite(ratio))'
  en: '      if (isNaN(ratio) || !isFinite(ratio))'
e30d495e2ffff2f8:
  de: >-
    wobei $e_i$ das jeweilige Einkommen einer Person ist. Wie
    stark ein einzelner Datenpunkt für diese Funktion das Ergebnis
    beeinflussen kann, hängt zum einen von dem möglichen Wertebereich
    (hier also der möglichen Gehaltsspanne) ab, als auch von der
    Anzahl der Datenpunkte $N$. Ist $e_\mathrm{max}$ das maximal
    zu betrachtende Gehalt beträgt die **Sensitivität** des Mittelwertes
    $\bar{E}$ daher
  en: >-
    where $e_i$ is the respective income of a person. The extent
    to which a single data point for this function can influence
    the result depends on the one hand on the possible range of
    values (in this case the possible salary range), and on the
    other hand on the number of data points $N$. If $e_\mathrm{max}$
    is the maximum salary to be considered, the **sensitivity
    of** the mean value $\bar{E}$ is therefore
e3b0c44298fc1c14:
  de: ''
  en: ''
e5b7c8af5c03d45a:
  de: >-
    <div data-render="SuccessRate({trials: 100, successes: 100})">
  en: >-
    <div data-render="SuccessRate({trials: 100, successes: 100})">
e6754ac967f39cf2:
  de: '      testStatistic.push(ratio)'
  en: '      testStatistic.push(ratio)'
e69200ae0c7313e3:
  de: <script type="module">
  en: <script type="module">
e6c8ca49a1823483:
  de: >-
    wobei $ x _ i = 1 $ falls das Einkommen des Datenpunktes $
    i $ im Bereich der Einkommen aus Gruppe $ g $ liegt $ [E^g
    _ \mathrm{min}, E^g _ \mathrm{max}] $, und $ x _ i = 0 $ andernfalls:
  en: >-
    Where $ x _ i = 1 $ if the income of the data point $ i $
    is in the range of income from group $ g $ $ [E^g _ \mathrm{min},
    E^g _ \mathrm{max}] $ , and $ x _ i = 0 $ otherwise:
e7b138a9a60eeec3:
  de: >-
    , unter der Annahme, dass die beiden Wahrscheinlichkeitswerte
    jeweils DP mit Wert $\epsilon$ erfüllen. Für den Fall, dass
    die Werte $X _ g $ und $ Y _ g $ nicht unabhängig sind, bleibt
    der Wert unter der Grenze (der Beweis hiervon ist allerdings
    etwas kompliziert). Der oben definierte Privatshpäre-Verlust
    ist somit additiv, was eine sehr nützliche Eigenschaft ist:
    Wissen wir, dass wir insgesamt $n$ Ergebnisse veröffentlichen
    wollen die auf einem Datenwert $x$ basieren, können wir den
    maximalen Privatsphäre-Verlust einfach als $n\cdot\epsilon$
    abschätzen. Wir können somit ein **Privatsphäre-Budget** definieren,
    anhand dessen wir unsere Veröffentlichung planen können.
  en: >-
    assuming that the two probability values satisfy DP with value
    $\epsilon$ respectively. In the case that the values $X _
    g $ and $ Y _ g $ are not independent, the value remains below
    the bound (the proof of this is a bit complicated, though).
    The privacy loss defined above is thus additive, which is
    a very useful property: if we know that we want to publish
    a total of $n$ results based on a data value $x$, we can easily
    estimate the maximum privacy loss as $n\cdot\epsilon$. We
    can thus define a **privacy budget** against which we can
    plan our publication.
e7dba0b556e6d88b:
  de: '      pv = Math.random()'
  en: '      pv = Math.random()'
e861e505a8c1ba66:
  de: '<div style="display: flex; flex-direction: row">'
  en: '<div style="display: flex; flex-direction: row">'
e874ff33bb2d1049:
  de: '    barChart("result-exact", [[1,2,3,4]], {});'
  en: '    barChart("result-exact", [[1,2,3,4]], {});'
eb8f7c3f6a481214:
  de: '    const testStatistic = [];'
  en: '    const testStatistic = [];'
ed77a1d25d950db4:
  de: >-
    <div id="cubes" data-render="DataCubes({data, color: 'red'})">
  en: >-
    <div id="cubes" data-render="DataCubes({data, color: 'red'})">
eecd2bc9d11df43f:
  de: "    barChart(\"test-statistic\", [testStatistic], {classNames:\
    \ ['is-green', 'is-red'], xTicks: ticks, height: 200});  \
    \  "
  en: "    barChart(\"test-statistic\", [testStatistic], {classNames:\
    \ ['is-green', 'is-red'], xTicks: ticks, height: 200});  "
f01f4c46d13105f3:
  de: '# Einführung'
  en: '# Introduction'
f02efeb0c4f06b8f:
  de: '  <div class=''face top''></div>'
  en: '  <div class=''face top''></div>'
f1b85b28c889bfd1:
  de: '  <h2>{{''dp.title''|translate}}</h2>'
  en: '  <h2>{{''dp.title''|translate}}</h2>'
f263148ebc3fa901:
  de: 0 & , & E_i \notin [E^g_{min},E^g_{max}] \\
  en: 0 & , & E_i \notin [E^g_{min},E^g_{max}] \\
f4e6254fdba0b91e:
  de: '      if (isNan(ratio) || !isFinite(ratio))'
  en: '      if (isNan(ratio) || !isFinite(ratio))'
f5280ef03c25ba4e:
  de: <div class="highlight">
  en: <div class="highlight">
f61f5bbc379fd349:
  de: '      }'
  en: '      }'
f71347faf50a21a0:
  de: >2-
        barChart("result-with-noise", [values, valuesD], {classNames:
    ['is-green', 'is-red'], xTicks: ticks,blocks: [{x: nv, class:
    'is-green'}, {x: nvD, class: 'is-red'}], height: 200});
  en: >2-
        barChart("result-with-noise", [values, valuesD], {classNames:
    ['is-green', 'is-red'], xTicks: ticks,blocks: [{x: nv, class:
    'is-green'}, {x: nvD, class: 'is-red'}], height: 200});
f83b14a13c67614d:
  de: <div id="table" data-render="DataTable(this.data)"></div>
  en: <div id="table" data-render="DataTable(this.data)"></div>
f98092410e0e7dd9:
  de: '  translations = {{site.translations.intro|tojson}};'
  en: '  translations = {{site.translations.intro|tojson}};'
f9f5d476bb53283c:
  de: >-
    <div id="cubes-dp" data-render="DataCubes({data, color: 'red'})">
  en: >-
    <div id="cubes-dp" data-render="DataCubes({data, color: 'red'})">
fa7f8633cd807cbd:
  de: '  <div class="face front"></div>'
  en: '  <div class="face front"></div>'
fb05b17f89301fcd:
  de: '    dp.exact = {'
  en: '    dp.exact = {'
fb14dff5b747a8cc:
  de: '  {{aggregate}}'
  en: '  {{aggregate}}'
fca07bb750ac7bc4:
  de: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, color: '#000'}], xTicks: ticks, height: 200});\
    \    "
  en: "    barChart(\"test-statistic\", [testStatistic], {hLines:\
    \ [{y: 1.0, color: '#000'}], xTicks: ticks, height: 200});\
    \    "
fe86ca09c85e14f1:
  de: <div class="cube is-red is-lg">
  en: <div class="cube is-red is-lg">
fe8faea807e9310e:
  de: '      count: frequency(data),'
  en: '      count: frequency(data),'
ff34c171c807ca72:
  de: '  const data = [{name: "Max Mustermann", income: 53242}]'
  en: '  const data = [{name: "Max Mustermann", income: 53242}]'
ff6f623cd010dfe2:
  de: '      else'
  en: '      else'
